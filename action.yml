name: 'Add JIRA Link to PR'
description: 'This action adds or updates a JIRA link in a pull request.'
inputs:
  jira-base-url:
    description: 'Base URL of the JIRA instance'
    required: true
runs:
  using: 'composite'
  steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Check if actor is dependabot
      run: |
        if [ "${{ github.actor }}" = "dependabot[bot]" ]; then
          echo "PR opened by dependabot. Exiting..."
          exit 0
        fi
      shell: bash

    - name: Extract JIRA Key
      id: extract-jira-key
      run: |
        PR_BRANCH="${{ github.event.pull_request.head.ref }}"
        PR_TITLE="${{ github.event.pull_request.title }}"
        echo "PR_BRANCH: $PR_BRANCH"
        echo "PR_TITLE: $PR_TITLE"
        JIRA_KEY=$(echo "$PR_TITLE $PR_BRANCH" | grep -Eio "[a-zA-Z]+[-\ ][0-9]+" | head -1 || true)
        if [ -z "$JIRA_KEY" ]; then
          echo "⚠️ JIRA key not found in PR title or branch name."
        fi
        JIRA_KEY=$(echo "$JIRA_KEY" | tr '[:lower:]' '[:upper:]')
        echo "Extracted JIRA Key: $JIRA_KEY"
        echo "JIRA_KEY=$JIRA_KEY" >> $GITHUB_ENV
      shell: bash

    - name: Add or Update JIRA Link to PR
      if: success()
      run: |
        JIRA_KEY=$JIRA_KEY
        if [ -z "$JIRA_KEY" ]; then
          echo "JIRA_KEY not set. Exiting..."
          exit 0
        fi
        JIRA_KEY_URL=$(echo "$JIRA_KEY" | tr ' ' '-')
        JIRA_LINK="${{ inputs.jira-base-url }}/browse/$JIRA_KEY_URL"
        COMMENT_BODY="🔗 Link to JIRA: [$JIRA_KEY_URL]($JIRA_LINK) <sup title='Note: The JIRA link reflects the current (or previous) PR title or the branch name.'>ⓘ</sup>"
        COMMENTS_URL="${{ github.event.pull_request.comments_url }}"
        AUTH_HEADER="Authorization: token ${{ github.token }}"
        COMMENT_ID=$(curl -s -H "$AUTH_HEADER" $COMMENTS_URL | jq '.[] | select(.body | contains("🔗 Link to JIRA")) | .id')
        echo "Identified COMMENT_ID: $COMMENT_ID"
        JSON_PAYLOAD=$(jq --arg comment "$COMMENT_BODY" '. | {"body": $comment}' <<< "{}")
        if [ -z "$COMMENT_ID" ]; then
          echo "COMMENT_ID is empty. Creating new comment."
          gh pr comment 1 -b "$COMMENT_BODY"
        else
          UPDATE_URL="https://api.github.com/repos/${{ github.repository }}/issues/comments/$COMMENT_ID"
          echo "Constructed UPDATE_URL: $UPDATE_URL"
          curl -s -H "$AUTH_HEADER" -H "Content-Type: application/json" -X PATCH -d "$JSON_PAYLOAD" $UPDATE_URL
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: bash
